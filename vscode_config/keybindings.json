// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "ctrl+h",
        "command":"cursorLeft",
        "when": "editorFocus && vim.mode == 'Insert'"
    },
	{
        "key": "ctrl+j",
        "command": "cursorDown",
        "when": "editorFocus && vim.mode == 'Insert'"
    },
	{
        "key": "ctrl+k",
        "command":"cursorUp",
        "when": "editorFocus && vim.mode == 'Insert'"
    },
    {
        "key": "ctrl+l",
        "command": "cursorRight",
        "when": "editorFocus && vim.mode == 'Insert'"
    },
	
	{
		"key": "ctrl+; s",
		"command": "cursorHome",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+; e",
		"command": "cursorEnd",
		"when": "editorFocus"
    },
	{
		"key":"ctrl+]",
		"command":"editor.action.goToDeclaration",
		"when": "editorFocus"
	},
	{
		"key":"ctrl+shift+t",
		"command":"-workbench.action.navigateBack",
		"when": "editorFocus"
	},
	{
		"key":"ctrl+t",
		"command":"workbench.action.navigateBack",
		"when": "editorFocus"
	},
	{
		"key":"alt+j",
		"command":"editor.action.moveLinesDownAction",
		"when": "editorFocus"
	},
	{
		"key":"alt+k",
		"command":"editor.action.moveLinesUpAction",
		"when":"editorFocus"
	},
	{
		"key": "ctrl+n",
		"command": "selectNextSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+p",
		"command": "selectPrevSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+'",
		"command": "editor.action.triggerSuggest",
		"when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
	},
	{
		"key": "ctrl+; '",
		"command": "editor.action.triggerParameterHints",
		"when": "editorHasSignatureHelpProvider && editorTextFocus"
	},
	{
		"key": "ctrl+; z",
		"command":"workbench.action.toggleMaximizedPanel",
	},
	{
		"key": "ctrl+oem_1 j",
		"command": "workbench.action.terminal.focus"
    },
    {
        "key": "ctrl+c",
        "command": "breadcrumbs.selectEditor",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "l",
        "command": "breadcrumbs.focusNext",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "h",
        "command": "breadcrumbs.focusPrevious",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    }
]